#!/usr/bin/nodejs

// OpenJSCAD.org CLI interface, written by Rene K. Mueller <spiritdude@gmail.com>
// License: GPLv2
//
var version = '0.005';
//
// Description:
//   openjscad <file> [-o <stl>]
// e.g.
//   openjscad test.jscad                    
//   openjscad test.jscad -o test.stl
//   openjscad test.scad -o testFromSCAD.jscad
//   openjscad test.scad -o test.stl
//   openjscad test.stl -o test2.stl      # reprocessed: stl -> jscad -> stl
//
// History:
// 2013/03/25: 0.005: more sanity check on input and local installation support
// 2013/03/18: 0.004: STL .stl (binary & ascii) support (experimental via openscad.js)
// 2013/03/18: 0.003: OpenSCAD .scad support by Gary Hodgson's openscad-openjscad-translator module
// 2013/03/02: 0.002: proper installation of the dependencies (csg.js & openscad.js) so openjscad can be used properly
// 2013/03/01: 0.001: initial version, with base function from openscad.jscad
//

var me = 'cli';

var fs = require('fs');
var vm = require('vm');
//include('./openscad.js');         // later

global.lib = '/usr/local/lib/openjscad/';    // for now hard-coded

//if (!fs.existsSync(global.lib))            // requires node 0.10.1 
//   global.lib = './';
if(!fs.statSync(global.lib).isDirectory())  // same but works with 0.6.1+
   global.lib = './';

var CSG = require(lib+'./csg.js').CSG;
var CAG = require(lib+'./csg.js').CAG;  // any way to include CSG & CAG in once?

//require(lib+'./OpenJsCad/openjscad.js'); // make it a nodejs module (later)

// hint: https://github.com/substack/node-optimist
//       https://github.com/visionmedia/commander.js
//
//process.argv.forEach(function (val, index, array) {
//  console.log(index + ': ' + val);
//});

var args = process.argv.splice(2);

var inf = args[0];
if(inf==null||inf.length<=0||!fs.statSync(inf).isFile()) {
   console.log("Usage: openjscad <file> [-o <output>]\n\twhereas file: <name>.jscad, <name>.scad or <name>.stl\n\tand output: <name>.jscad or <name>.stl");
   process.exit(1);
}

var outf = inf;
outf = outf.replace(/\.[^\.]+$/,'.stl');

// output setting like openscad
if(args.length==2) {                         // -o<output>
   outf = args[1];
   outf = outf.replace(/^\-o(\S+)$/,'$1');
} else if(args.length==3&&args[1]=='-o') {   // -o <output>
   outf = args[2];
}

//console.log("reading "+inf);
var src = fs.readFileSync(inf,inf.match(/\.stl$/)?"binary":"UTF8");
var scad = fs.readFileSync(lib+'./openscad.js');
var inc = [];

//var csg = sphere(1);          // -- basic test
//var csg = require(file).main; // -- treating .jscad as module? later perhaps

var exportSTL = false;

if(/\.scad$/.exec(inf)) {       // -- input .scad file
   //var scadParser = require('openscad-openjscad-translator');     // npm installed but doesn't find it (crap!)
   var scadParser = require('/usr/local/lib/node_modules/openscad-openjscad-translator');  // hardcoded is bad, but works
   if(/\.jscad/.exec(outf)) {    // -- output isn't .stl, but .jscad
      console.log("converting "+inf+" to "+outf);
      src = scadParser.parse(src); //    doing the magick
      src = "// "+outf+" created by openjscad-"+version+" from "+inf+"\n\n"+src;
      var s = fs.WriteStream(outf);
      s.write(src);
      
   } else {
      console.log("converting "+inf+" to jscad");
      src = scadParser.parse(src); // doing the magick
      console.log("converting jscad to "+outf);
      exportSTL = true;
   }
   
} else if(/\.stl$/.exec(inf)) {       // -- input .stl file
   console.log("converting "+inf+" to jscad");
   var openscad = require(lib+'openscad.js');
   src = openscad.parseSTL(src,inf);
   if(/\.jscad/.exec(outf)) {         // -- output isn't .stl, but .jscad
      console.log("converting "+inf+" to "+outf);
      var s = fs.WriteStream(outf);
      s.write(src);
      
   } else {
      //console.log("stl to stl skipped, choose e.g. '-o test.jscad' to force .jscad output");
      console.log("converting jscad to "+outf);
      exportSTL = true;
   }
   
} else {
   console.log("converting "+inf+" to "+outf);
   exportSTL = true;
}

if(exportSTL) {
   var csg;
   if(1) {
      csg = eval(src+"\n"+scad+"\nmain()\n");    // *.jscad + openscad.js + main()

   } else {                   // -- experimenting to get include() working (not yet)
      eval(src+"\n"+scad);    // *.jscad + openscad.js

      var incs = "";
      for(var i=0; i<inc.length; i++) {
         incs += inc[i];
      }
      //console.log("incs",inc,incs);

      var csg = eval(incs+"main()");         // all includes + main()
   }
   //var stl = csg.fixTJunctions().toStlBinary();
   var stl = csg.fixTJunctions().toStlString();

   var s = fs.WriteStream(outf);
   s.write(stl);
}

// -- helper functions 

function include(fn) {     // preparing include(), not yet working
   console.log("local.include",fn);
   if(0) {
      //var script = vm.createScript(fs.readFileSync(fn),fn);
      //script.runInThisContext();
      var script = vm.runInThisContext(fs.readFileSync(fn),fn);
      return script;
   } else {
      var src = fs.readFileSync(fn);
      //console.log("exec",src);
      return eval(src);
   }
}

